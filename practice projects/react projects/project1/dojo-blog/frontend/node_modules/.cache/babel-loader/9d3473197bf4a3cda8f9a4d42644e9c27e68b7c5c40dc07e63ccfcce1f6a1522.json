{"ast":null,"code":"var _jsxFileName = \"/home/siddhi/InvestSavvy_coc_inheritance/practice projects/react projects/project1/dojo-blog/src/Getnews.js\",\n  _s = $RefreshSig$();\n// let p = fetch('https://ok.surf/api/v1/cors/news-section')\n// p.then((value1) => {\n//     return value1.json\n// }).then((value2)=>{\n//     return value2.json\n// })\n\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Getnews = () => {\n  _s();\n  // let API = 'https://ok.surf/api/v1/cors/news-section';\n\n  // const fetchApidata = async (url) => {\n  //     try {\n  //         const res = fetch(url)\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // }\n  // useEffect(() => {\n  //     fetchApidata(API);\n  // }, []);\n  // return ( \n  //     <h2>News</h2>\n  //  );\n  // return(\n  //     <h2>News</h2>\n  // );\n  //     fetch('https://ok.surf/api/v1/cors/news-feed').then((res) => {\n  //   if (!res.ok) {\n  //     throw Error('could not fetch data for that resource');\n  //   }\n  //   return res.json();\n  // }).then((data) => {\n  //   console.log(data);\n  //     // <p>data</p>\n  // }).catch((err) => {\n  //   console.log(err);\n  // });\n\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchEconomicNews = async () => {\n      try {\n        const apiUrl = 'https://api.example.com/economic-news';\n        const response = await axios.get(apiUrl);\n        if (!response.ok) {\n          throw new Error('Unable to fetch news');\n        }\n        const data = response.data;\n        setNews(data.Objects); // Adjust the property based on the actual API response format\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching news:', error);\n        setLoading(false);\n      }\n    };\n    fetchEconomicNews();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Economic News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: news.map((object, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: object.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: object.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Getnews, \"F6yDZrO2rMZs5jzX1Q2MMfiqj9g=\");\n_c = Getnews;\nexport default Getnews;\nvar _c;\n$RefreshReg$(_c, \"Getnews\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","Getnews","_s","news","setNews","loading","setLoading","fetchEconomicNews","apiUrl","response","get","ok","Error","data","Objects","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","object","index","title","description","_c","$RefreshReg$"],"sources":["/home/siddhi/InvestSavvy_coc_inheritance/practice projects/react projects/project1/dojo-blog/src/Getnews.js"],"sourcesContent":["// let p = fetch('https://ok.surf/api/v1/cors/news-section')\n// p.then((value1) => {\n//     return value1.json\n// }).then((value2)=>{\n//     return value2.json\n// })\n\nimport { useEffect , useState } from \"react\";\nimport axios from 'axios';\n\nconst Getnews = () => {\n\n    // let API = 'https://ok.surf/api/v1/cors/news-section';\n\n    // const fetchApidata = async (url) => {\n    //     try {\n    //         const res = fetch(url)\n    //     } catch (error) {\n    //         console.log(error);\n    //     }\n    // }\n    // useEffect(() => {\n    //     fetchApidata(API);\n    // }, []);\n    // return ( \n    //     <h2>News</h2>\n    //  );\n    // return(\n    //     <h2>News</h2>\n    // );\n//     fetch('https://ok.surf/api/v1/cors/news-feed').then((res) => {\n//   if (!res.ok) {\n//     throw Error('could not fetch data for that resource');\n//   }\n//   return res.json();\n// }).then((data) => {\n//   console.log(data);\n//     // <p>data</p>\n// }).catch((err) => {\n//   console.log(err);\n// });\n\n    const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchEconomicNews = async () => {\n      try {\n        const apiUrl = 'https://api.example.com/economic-news';\n        const response = await axios.get(apiUrl);\n\n        if (!response.ok) {\n          throw new Error('Unable to fetch news');\n        }\n\n        const data = response.data;\n        setNews(data.Objects); // Adjust the property based on the actual API response format\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching news:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchEconomicNews();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  return (\n    <div>\n      <h2>Economic News</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          {news.map((object, index) => (\n            <div key={index}>\n              <h3>{object.title}</h3>\n              <p>{object.description}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n \nexport default Getnews;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,EAAGC,QAAQ,QAAQ,OAAO;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,MAAM,GAAG,uCAAuC;QACtD,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACF,MAAM,CAAC;QAExC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QAEA,MAAMC,IAAI,GAAGJ,QAAQ,CAACI,IAAI;QAC1BT,OAAO,CAACS,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;QACvBR,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBhB,OAAO,gBACNL,OAAA;MAAAiB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBrB,OAAA;MAAAiB,QAAA,EACGd,IAAI,CAACmB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACtBxB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAAKM,MAAM,CAACE;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBrB,OAAA;UAAAiB,QAAA,EAAIM,MAAM,CAACG;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFnBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1EID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA6Eb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}