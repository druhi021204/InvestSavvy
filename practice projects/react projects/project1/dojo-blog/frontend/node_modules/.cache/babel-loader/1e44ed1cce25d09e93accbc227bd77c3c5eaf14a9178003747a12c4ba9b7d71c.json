{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, username, password) => {\n    setIsLoading(true);\n    setError(null);\n    console.log();\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        username,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      //save user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      //update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"XLolJbgaWhcWCQyQceNUQz8r1xc=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","email","username","password","console","log","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["/home/siddhi/InvestSavvy_coc_inheritance/practice projects/react projects/project1/dojo-blog/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useSignup = () => {\n    const[error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    const {dispatch} = useAuthContext()\n\n    const signup = async(email, username, password) => {\n        setIsLoading(true)\n        setError(null)\n        console.log()\n        const response = await fetch('/api/user/signup',{\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({email, username , password})\n        })\n\n        const json = await response.json()\n\n        if(!response.ok)\n        {\n            setIsLoading(false)\n            setError(json.error)\n        }\n\n        if(response.ok)\n        {\n            //save user to local storage\n            localStorage.setItem('user', JSON.stringify(json))\n\n            //update the auth context\n            dispatch({type:'LOGIN', payload:json})\n\n            setIsLoading(false)\n        }\n    }\n\n    return {signup, isLoading, error}\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAACQ;EAAQ,CAAC,GAAGP,cAAc,CAAC,CAAC;EAEnC,MAAMQ,MAAM,GAAG,MAAAA,CAAMC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;IAC/CL,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IACdQ,OAAO,CAACC,GAAG,CAAC,CAAC;IACb,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAC;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACX,KAAK;QAAEC,QAAQ;QAAGC;MAAQ,CAAC;IACrD,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EACf;MACIhB,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACiB,IAAI,CAAClB,KAAK,CAAC;IACxB;IAEA,IAAGW,QAAQ,CAACQ,EAAE,EACd;MACI;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAd,QAAQ,CAAC;QAACkB,IAAI,EAAC,OAAO;QAAEC,OAAO,EAACL;MAAI,CAAC,CAAC;MAEtCf,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAACE,MAAM;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACrC,CAAC;AAAAD,EAAA,CApCYD,SAAS;EAAA,QAGCD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}