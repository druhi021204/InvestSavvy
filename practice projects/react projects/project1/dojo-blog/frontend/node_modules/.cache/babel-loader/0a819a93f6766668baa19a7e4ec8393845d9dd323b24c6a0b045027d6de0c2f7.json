{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s2();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    _s(setTimeout(_s(() => {\n      _s();\n      const [blogg, setBlogs] = useState(blogs);\n\n      //  const handleDelete=(id) => {\n      //        const newBlogs = blogg.filter((blog) => blog.id!==id);   \n      //        setBlogs (newBlogs);\n      //   }\n      fetch(url).then(res => {\n        if (!res.ok) {\n          // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        }\n        return res.json();\n      }).then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      }).catch(err => {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, \"oFdt5OCGAbR3Yz0BTyYY+pVgdtI=\"), 1000), \"oFdt5OCGAbR3Yz0BTyYY+pVgdtI=\");\n    return () => console.log(\"Cleanup\");\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s2(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s2","data","setData","isPending","setIsPending","error","setError","_s","$RefreshSig$","setTimeout","blogg","setBlogs","blogs","fetch","then","res","ok","Error","json","catch","err","message","console","log"],"sources":["/home/siddhi/InvestSavvy_coc_inheritance/practice projects/react projects/project1/dojo-blog/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setTimeout(() => {const [blogg, setBlogs] = useState(blogs);\n\n  //  const handleDelete=(id) => {\n  //        const newBlogs = blogg.filter((blog) => blog.id!==id);   \n  //        setBlogs (newBlogs);\n  //   }\n      fetch(url)\n      .then(res => {\n        if (!res.ok) { // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      })\n    }, 1000);\n\n    return () => console.log(\"Cleanup\")\n  }, [url])\n\n  return { data, isPending, error };\n}\n \nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,GAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IAAA,IAAAU,EAAA,GAAAC,YAAA;IACdD,EAAA,CAAAE,UAAU,CAAAF,EAAA,CAAC,MAAM;MAAAA,EAAA;MAAC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACgB,KAAK,CAAC;;MAE7D;MACA;MACA;MACA;MACIC,KAAK,CAACd,GAAG,CAAC,CACTe,IAAI,CAACC,GAAG,IAAI;QACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UAAE;UACb,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC3D;QACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CACDJ,IAAI,CAACb,IAAI,IAAI;QACZG,YAAY,CAAC,KAAK,CAAC;QACnBF,OAAO,CAACD,IAAI,CAAC;QACbK,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,CACDa,KAAK,CAACC,GAAG,IAAI;QACZ;QACAhB,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACc,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,mCAAE,IAAI,CAAC;IAER,OAAO,MAAMC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACrC,CAAC,EAAE,CAACxB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAAAL,GAAA,CAnCKF,QAAQ;AAqCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}