{"ast":null,"code":"var _jsxFileName = \"/home/siddhi/InvestSavvy_coc_inheritance/invest-savvy/client/src/pages/getstock.js\",\n  _s = $RefreshSig$();\n// // https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\n\n// import React, { useEffect, useState } from \"react\";\n// // import invest from '../pictures/invest.jpeg';\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     let resonse = await fetch(\n//       \" https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//     );\n//     let data = await resonse.json();\n//     // console.log(data)\n//     setStocks(data);\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//     <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//           <div className=\"mainDiv\">\n//       {stocks.map((ele) => {\n//         // console.log(ele)\n//         return (\n//           <>\n//         <div className=\"card\" >\n//               {/* <img src={ele.urlToImage === null ? invest : ele.urlToImage} class=\"card-img-top\" alt=\"...\" /> */}\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 {/* <h5 className=\"card-title\">{ele.author === \"\" ? \"Janelle Ash\" : ele.author}</h5> */}\n//                 <p className=\"card-text\">\n//                  {ele.name}\n//                  {/* {ele.price}\n//                  {ele.exchange}\n//                  {ele.exchangeShortName} */}\n//                 </p>\n//                 {/* <a href={ele.url} target=\"_blank\" className=\"btn btn-primary\">\n//                   Read More\n//                 </a> */}\n//               </div>\n//             </div>\n//           </>\n//         );\n//     })}\n//     </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       setStocks(data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>Loading...</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"fetching data\")\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       console.log(data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [currentPage, setCurrentPage] = useState(1);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"Fetching data for page:\", currentPage);\n//     try {\n//       let response = await fetch(\n//         `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}`\n//       );\n//       let data = await response.json();\n//       console.log(\"Data received:\", data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, [currentPage]);\n\n//   const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//     setLoading(true); // Set loading to true when changing pages\n//   };\n\n//   return (\n//     <>\n//       <h2 className=\"stockdiv\">Get the latest Stock Price</h2>\n//       <div className=\"maindiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : memoizedStocks.length > 0 ? (\n//           memoizedStocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//                 <p className=\"card-text\">{ele.price}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n\n//         {/* Pagination Controls */}\n//         <div className=\"pagination\">\n//           <button\n//             disabled={currentPage === 1}\n//             onClick={() => handlePageChange(currentPage - 1)}\n//           >\n//             Previous\n//           </button>\n//           <span> Page {currentPage} </span>\n//           <button onClick={() => handlePageChange(currentPage + 1)}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { debounce } from 'lodash';\n\n// const fetchData = debounce(async (currentPage, pageSize, setStocks, setLoading) => {\n//   try {\n//     const url = `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}&limit=${pageSize}`;\n//     console.log(\"Fetching data with URL:\", url);\n\n//     let response = await fetch(url);\n//     let data = await response.json();\n//     console.log(\"Data received:\", data);\n\n//     setStocks(data);\n//     setLoading(false);\n//   } catch (error) {\n//     console.error(\"Error fetching data:\", error);\n//     setLoading(false);\n//   }\n// }, 300); // Debounce time in milliseconds\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pageSize, setPageSize] = useState(1);\n\n//   useEffect(() => {\n//     fetchData(currentPage, pageSize, setStocks, setLoading);\n//   }, [currentPage, pageSize]);\n\n//   const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//     setLoading(true);\n//   };\n\n//   const handlePageSizeChange = (newPageSize) => {\n//     setPageSize(newPageSize);\n//     setCurrentPage(1);\n//     setLoading(true);\n//   };\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {/* Controls for changing page size */}\n//         <div className=\"pageSizeControls\">\n//           <label htmlFor=\"pageSize\">Items per page:</label>\n//           <select\n//             id=\"pageSize\"\n//             value={pageSize}\n//             onChange={(e) => handlePageSizeChange(Number(e.target.value))}\n//           >\n//             <option value={5}>5</option>\n//             <option value={10}>10</option>\n//             <option value={20}>20</option>\n//           </select>\n//         </div>\n\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : memoizedStocks && memoizedStocks.length > 0 ? (\n//           memoizedStocks.map((ele) => (\n//             <div className=\"card\" key={ele.symbol}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n\n//         {/* Pagination Controls */}\n//         <div className=\"pagination\">\n//           <button\n//             disabled={currentPage === 1}\n//             onClick={() => handlePageChange(currentPage - 1)}\n//           >\n//             Previous\n//           </button>\n//           <span> Page {currentPage} </span>\n//           <button onClick={() => handlePageChange(currentPage + 1)}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useState } from \"react\";\n\n// const CompanyDetails = () => {\n//   const [symbol, setSymbol] = useState(\"\");\n//   const [companyDetails, setCompanyDetails] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const fetchCompanyDetails = async () => {\n//     try {\n//       setLoading(true);\n//       setError(null);\n\n//       const response = await fetch(\n//         `https://financialmodelingprep.com/api/v3/quote/${symbol}?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja`\n//       );\n//       const data = await response.json();\n\n//       if (data && data.length > 0) {\n//         setCompanyDetails(data[0]);\n//       } else {\n//         setCompanyDetails(null);\n//         setError(\"Company not found\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching company details:\", error);\n//       setError(\"Error fetching data\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     fetchCompanyDetails();\n//   };\n\n//   return (\n//     <div className=\"getinput\">\n//     <h2> Instantly Discover the Share/Stock Price at Your Fingertips</h2>\n//       <h3>Provide the Company Details</h3>\n//       <form onSubmit={handleSubmit}>\n//         <label required>\n//           Enter Company Symbol:\n//           <input\n//             type=\"text\"\n//             value={symbol}\n//             onChange={(e) => setSymbol(e.target.value)}\n//           />\n//         </label>\n//         <button type=\"submit\" disabled={loading}>\n//           Get Details\n//         </button>\n//       </form>\n\n//       {loading && <p>Loading...</p>}\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n//       {companyDetails && (\n//         <div className=\"data\">\n//           <h3>{companyDetails.symbol}</h3>\n//             <div className=\"column1\">\n//             <p>Name: </p>\n//             <p>Price: </p>\n//             <p>Change: </p>\n//             <p>Percentage Change: </p>\n//             <p>Day Low: </p>\n//             <p>Day High: </p>\n//             <p>Year Low: </p>\n//             <p>Year High: </p>\n//             <p>Market Cap: </p>\n//             <p>Price Avg 50: </p>\n//             <p>Price Avg 200: </p>\n//             <p>Exchange: </p>\n//             <p>Volume: </p>\n//             <p>Average Volume: </p>\n//             <p>Open: </p>\n//             <p>Previous Close: \n//             <p>Earnings per Share (EPS): </p>\n//             <p>Price to Earnings (P/E) Ratio: </p>\n//             <p>Earnings Announcement:</p>\n//             <p>Shares Outstanding: </p>\n//             <p>Timestamp: </p>\n//             </div>\n\n//             <div className=\"column2\">\n//             <p>{companyDetails.name}</p>\n//             <p>{companyDetails.price}</p>\n//             <p>{companyDetails.change}</p>\n//             <p>{companyDetails.changesPercentage}%</p>\n//             <p>{companyDetails.dayLow}</p>\n//             <p>{companyDetails.dayHigh}</p>\n//             <p>{companyDetails.yearLow}</p>\n//             <p>{companyDetails.yearHigh}</p>\n//             <p>{companyDetails.marketCap}</p>\n//             <p>{companyDetails.priceAvg50}</p>\n//             <p>{companyDetails.priceAvg200}</p>\n//             <p>{companyDetails.exchange}</p>\n//             <p>{companyDetails.volume}</p>\n//             <p>{companyDetails.avgVolume}</p>\n//             <p>{companyDetails.open}</p>\n//             <p>{companyDetails.previousClose}</p>\n//             <p>{companyDetails.eps}</p>\n//             <p>{companyDetails.pe}</p>\n//             <p>{companyDetails.earningsAnnouncement}</p>\n//             <p>{companyDetails.sharesOutstanding}</p>\n//             <p>{companyDetails.timestamp}</p>\n//             </div>\n\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CompanyDetails;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyDetails = () => {\n  _s();\n  const [symbol, setSymbol] = useState(\"\");\n  const [companyDetails, setCompanyDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const finnhub = require('finnhub');\n  const api_key = finnhub.ApiClient.instance.authentications['api_key'];\n  api_key.apiKey = \"cmqvv7hr01ql2lmt95u0cmqvv7hr01ql2lmt95ug\";\n  const finnhubClient = new finnhub.DefaultApi();\n  finnhubClient.quote(\"AAPL\", (error, data, response) => {\n    console.log(data);\n  });\n  const fetchCompanyDetails = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`https://financialmodelingprep.com/api/v3/quote/${symbol}?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setCompanyDetails(data[0]);\n      } else {\n        setCompanyDetails(null);\n        setError(\"Company not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching company details:\", error);\n      setError(\"Error fetching data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchCompanyDetails();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"getinput\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Instantly Discover the Share/Stock Price at Your Fingertips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Provide the Company Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Company Symbol:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: symbol,\n          onChange: e => setSymbol(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Get Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 17\n    }, this), companyDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: companyDetails.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Price : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Change : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Percentage Change : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Day Low : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Day High : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Year Low : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Year High : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Market Cap : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Price Avg 50 : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Price Avg 200 : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Exchange : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Volume : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Average Volume : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Open : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Previous Close : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Earnings per Share (EPS) : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Price to Earnings (P/E) Ratio : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Earnings Announcement : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Shares Outstanding : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Timestamp : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [companyDetails.changesPercentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.dayLow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.dayHigh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.yearLow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.yearHigh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.marketCap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.priceAvg50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.priceAvg200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.exchange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.volume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.avgVolume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.open\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.previousClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.eps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.pe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.earningsAnnouncement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.sharesOutstanding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDetails.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 493,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyDetails, \"7HZhi5DSHvw86PHUsKXbnDYImFw=\");\n_c = CompanyDetails;\nexport default CompanyDetails;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetails\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CompanyDetails","_s","symbol","setSymbol","companyDetails","setCompanyDetails","loading","setLoading","error","setError","finnhub","require","api_key","ApiClient","instance","authentications","apiKey","finnhubClient","DefaultApi","quote","data","response","console","log","fetchCompanyDetails","fetch","json","length","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","disabled","style","color","name","price","change","changesPercentage","dayLow","dayHigh","yearLow","yearHigh","marketCap","priceAvg50","priceAvg200","exchange","volume","avgVolume","open","previousClose","eps","pe","earningsAnnouncement","sharesOutstanding","timestamp","_c","$RefreshReg$"],"sources":["/home/siddhi/InvestSavvy_coc_inheritance/invest-savvy/client/src/pages/getstock.js"],"sourcesContent":["// // https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\n\n\n// import React, { useEffect, useState } from \"react\";\n// // import invest from '../pictures/invest.jpeg';\n\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     let resonse = await fetch(\n//       \" https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//     );\n//     let data = await resonse.json();\n//     // console.log(data)\n//     setStocks(data);\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//     <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//           <div className=\"mainDiv\">\n//       {stocks.map((ele) => {\n//         // console.log(ele)\n//         return (\n//           <>\n//         <div className=\"card\" >\n//               {/* <img src={ele.urlToImage === null ? invest : ele.urlToImage} class=\"card-img-top\" alt=\"...\" /> */}\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 {/* <h5 className=\"card-title\">{ele.author === \"\" ? \"Janelle Ash\" : ele.author}</h5> */}\n//                 <p className=\"card-text\">\n//                  {ele.name}\n//                  {/* {ele.price}\n//                  {ele.exchange}\n//                  {ele.exchangeShortName} */}\n//                 </p>\n//                 {/* <a href={ele.url} target=\"_blank\" className=\"btn btn-primary\">\n//                   Read More\n//                 </a> */}\n//               </div>\n//             </div>\n//           </>\n//         );\n//     })}\n//     </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       setStocks(data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>Loading...</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"fetching data\")\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       console.log(data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [currentPage, setCurrentPage] = useState(1);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"Fetching data for page:\", currentPage);\n//     try {\n//       let response = await fetch(\n//         `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}`\n//       );\n//       let data = await response.json();\n//       console.log(\"Data received:\", data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, [currentPage]);\n\n//   const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//     setLoading(true); // Set loading to true when changing pages\n//   };\n\n//   return (\n//     <>\n//       <h2 className=\"stockdiv\">Get the latest Stock Price</h2>\n//       <div className=\"maindiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : memoizedStocks.length > 0 ? (\n//           memoizedStocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//                 <p className=\"card-text\">{ele.price}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n\n//         {/* Pagination Controls */}\n//         <div className=\"pagination\">\n//           <button\n//             disabled={currentPage === 1}\n//             onClick={() => handlePageChange(currentPage - 1)}\n//           >\n//             Previous\n//           </button>\n//           <span> Page {currentPage} </span>\n//           <button onClick={() => handlePageChange(currentPage + 1)}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { debounce } from 'lodash';\n\n// const fetchData = debounce(async (currentPage, pageSize, setStocks, setLoading) => {\n//   try {\n//     const url = `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}&limit=${pageSize}`;\n//     console.log(\"Fetching data with URL:\", url);\n\n//     let response = await fetch(url);\n//     let data = await response.json();\n//     console.log(\"Data received:\", data);\n\n//     setStocks(data);\n//     setLoading(false);\n//   } catch (error) {\n//     console.error(\"Error fetching data:\", error);\n//     setLoading(false);\n//   }\n// }, 300); // Debounce time in milliseconds\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pageSize, setPageSize] = useState(1);\n\n//   useEffect(() => {\n//     fetchData(currentPage, pageSize, setStocks, setLoading);\n//   }, [currentPage, pageSize]);\n\n//   const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//     setLoading(true);\n//   };\n\n//   const handlePageSizeChange = (newPageSize) => {\n//     setPageSize(newPageSize);\n//     setCurrentPage(1);\n//     setLoading(true);\n//   };\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {/* Controls for changing page size */}\n//         <div className=\"pageSizeControls\">\n//           <label htmlFor=\"pageSize\">Items per page:</label>\n//           <select\n//             id=\"pageSize\"\n//             value={pageSize}\n//             onChange={(e) => handlePageSizeChange(Number(e.target.value))}\n//           >\n//             <option value={5}>5</option>\n//             <option value={10}>10</option>\n//             <option value={20}>20</option>\n//           </select>\n//         </div>\n\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : memoizedStocks && memoizedStocks.length > 0 ? (\n//           memoizedStocks.map((ele) => (\n//             <div className=\"card\" key={ele.symbol}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n\n//         {/* Pagination Controls */}\n//         <div className=\"pagination\">\n//           <button\n//             disabled={currentPage === 1}\n//             onClick={() => handlePageChange(currentPage - 1)}\n//           >\n//             Previous\n//           </button>\n//           <span> Page {currentPage} </span>\n//           <button onClick={() => handlePageChange(currentPage + 1)}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n\n// import React, { useState } from \"react\";\n\n// const CompanyDetails = () => {\n//   const [symbol, setSymbol] = useState(\"\");\n//   const [companyDetails, setCompanyDetails] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const fetchCompanyDetails = async () => {\n//     try {\n//       setLoading(true);\n//       setError(null);\n\n//       const response = await fetch(\n//         `https://financialmodelingprep.com/api/v3/quote/${symbol}?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja`\n//       );\n//       const data = await response.json();\n\n//       if (data && data.length > 0) {\n//         setCompanyDetails(data[0]);\n//       } else {\n//         setCompanyDetails(null);\n//         setError(\"Company not found\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching company details:\", error);\n//       setError(\"Error fetching data\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     fetchCompanyDetails();\n//   };\n\n//   return (\n//     <div className=\"getinput\">\n//     <h2> Instantly Discover the Share/Stock Price at Your Fingertips</h2>\n//       <h3>Provide the Company Details</h3>\n//       <form onSubmit={handleSubmit}>\n//         <label required>\n//           Enter Company Symbol:\n//           <input\n//             type=\"text\"\n//             value={symbol}\n//             onChange={(e) => setSymbol(e.target.value)}\n//           />\n//         </label>\n//         <button type=\"submit\" disabled={loading}>\n//           Get Details\n//         </button>\n//       </form>\n\n//       {loading && <p>Loading...</p>}\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n//       {companyDetails && (\n//         <div className=\"data\">\n//           <h3>{companyDetails.symbol}</h3>\n//             <div className=\"column1\">\n//             <p>Name: </p>\n//             <p>Price: </p>\n//             <p>Change: </p>\n//             <p>Percentage Change: </p>\n//             <p>Day Low: </p>\n//             <p>Day High: </p>\n//             <p>Year Low: </p>\n//             <p>Year High: </p>\n//             <p>Market Cap: </p>\n//             <p>Price Avg 50: </p>\n//             <p>Price Avg 200: </p>\n//             <p>Exchange: </p>\n//             <p>Volume: </p>\n//             <p>Average Volume: </p>\n//             <p>Open: </p>\n//             <p>Previous Close: \n//             <p>Earnings per Share (EPS): </p>\n//             <p>Price to Earnings (P/E) Ratio: </p>\n//             <p>Earnings Announcement:</p>\n//             <p>Shares Outstanding: </p>\n//             <p>Timestamp: </p>\n//             </div>\n\n//             <div className=\"column2\">\n//             <p>{companyDetails.name}</p>\n//             <p>{companyDetails.price}</p>\n//             <p>{companyDetails.change}</p>\n//             <p>{companyDetails.changesPercentage}%</p>\n//             <p>{companyDetails.dayLow}</p>\n//             <p>{companyDetails.dayHigh}</p>\n//             <p>{companyDetails.yearLow}</p>\n//             <p>{companyDetails.yearHigh}</p>\n//             <p>{companyDetails.marketCap}</p>\n//             <p>{companyDetails.priceAvg50}</p>\n//             <p>{companyDetails.priceAvg200}</p>\n//             <p>{companyDetails.exchange}</p>\n//             <p>{companyDetails.volume}</p>\n//             <p>{companyDetails.avgVolume}</p>\n//             <p>{companyDetails.open}</p>\n//             <p>{companyDetails.previousClose}</p>\n//             <p>{companyDetails.eps}</p>\n//             <p>{companyDetails.pe}</p>\n//             <p>{companyDetails.earningsAnnouncement}</p>\n//             <p>{companyDetails.sharesOutstanding}</p>\n//             <p>{companyDetails.timestamp}</p>\n//             </div>\n\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CompanyDetails;\n\n\nimport React, { useState } from \"react\";\n\nconst CompanyDetails = () => {\n  const [symbol, setSymbol] = useState(\"\");\n  const [companyDetails, setCompanyDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const finnhub = require('finnhub');\n\n  const api_key = finnhub.ApiClient.instance.authentications['api_key'];\n  api_key.apiKey = \"cmqvv7hr01ql2lmt95u0cmqvv7hr01ql2lmt95ug\"\n  const finnhubClient = new finnhub.DefaultApi()\n\nfinnhubClient.quote(\"AAPL\", (error, data, response) => {\n  console.log(data)\n});\n\n\n\n  const fetchCompanyDetails = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await fetch(\n        `https://financialmodelingprep.com/api/v3/quote/${symbol}?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja`\n      );\n      const data = await response.json();\n\n      if (data && data.length > 0) {\n        setCompanyDetails(data[0]);\n      } else {\n        setCompanyDetails(null);\n        setError(\"Company not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching company details:\", error);\n      setError(\"Error fetching data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchCompanyDetails();\n  };\n\n  return (\n    <div className=\"getinput\">\n      <h2> Instantly Discover the Share/Stock Price at Your Fingertips</h2>\n      <h3>Provide the Company Details</h3>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Enter Company Symbol:\n          <input\n            type=\"text\"\n            value={symbol}\n            onChange={(e) => setSymbol(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\" disabled={loading}>\n          Get Details\n        </button>\n      </form>\n\n      {loading && <p>Loading...</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {companyDetails && (\n        <div className=\"data\">\n          <h3>{companyDetails.symbol}</h3>\n          <div className=\"column1\">\n            <p>Name : </p>\n            <p>Price : </p>\n            <p>Change : </p>\n            <p>Percentage Change : </p>\n            <p>Day Low : </p>\n            <p>Day High : </p>\n            <p>Year Low : </p>\n            <p>Year High : </p>\n            <p>Market Cap : </p>\n            <p>Price Avg 50 : </p>\n            <p>Price Avg 200 : </p>\n            <p>Exchange : </p>\n            <p>Volume : </p>\n            <p>Average Volume : </p>\n            <p>Open : </p>\n            <p>Previous Close : </p>\n            <p>Earnings per Share (EPS) : </p>\n            <p>Price to Earnings (P/E) Ratio : </p>\n            <p>Earnings Announcement : </p>\n            <p>Shares Outstanding : </p>\n            <p>Timestamp : </p>\n          </div>\n\n          <div className=\"column2\">\n            <p>{companyDetails.name}</p>\n            <p>{companyDetails.price}</p>\n            <p>{companyDetails.change}</p>\n            <p>{companyDetails.changesPercentage}%</p>\n            <p>{companyDetails.dayLow}</p>\n            <p>{companyDetails.dayHigh}</p>\n            <p>{companyDetails.yearLow}</p>\n            <p>{companyDetails.yearHigh}</p>\n            <p>{companyDetails.marketCap}</p>\n            <p>{companyDetails.priceAvg50}</p>\n            <p>{companyDetails.priceAvg200}</p>\n            <p>{companyDetails.exchange}</p>\n            <p>{companyDetails.volume}</p>\n            <p>{companyDetails.avgVolume}</p>\n            <p>{companyDetails.open}</p>\n            <p>{companyDetails.previousClose}</p>\n            <p>{companyDetails.eps}</p>\n            <p>{companyDetails.pe}</p>\n            <p>{companyDetails.earningsAnnouncement}</p>\n            <p>{companyDetails.sharesOutstanding}</p>\n            <p>{companyDetails.timestamp}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CompanyDetails;\n"],"mappings":";;AAAA;;AAGA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;EAElC,M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"},"metadata":{},"sourceType":"module","externalDependencies":[]}