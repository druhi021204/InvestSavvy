{"ast":null,"code":"var _jsxFileName = \"/home/siddhi/InvestSavvy_coc_inheritance/invest-savvy/client/src/pages/getstock.js\",\n  _s = $RefreshSig$();\n// // https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\n\n// import React, { useEffect, useState } from \"react\";\n// // import invest from '../pictures/invest.jpeg';\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     let resonse = await fetch(\n//       \" https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//     );\n//     let data = await resonse.json();\n//     // console.log(data)\n//     setStocks(data);\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//     <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//           <div className=\"mainDiv\">\n//       {stocks.map((ele) => {\n//         // console.log(ele)\n//         return (\n//           <>\n//         <div className=\"card\" >\n//               {/* <img src={ele.urlToImage === null ? invest : ele.urlToImage} class=\"card-img-top\" alt=\"...\" /> */}\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 {/* <h5 className=\"card-title\">{ele.author === \"\" ? \"Janelle Ash\" : ele.author}</h5> */}\n//                 <p className=\"card-text\">\n//                  {ele.name}\n//                  {/* {ele.price}\n//                  {ele.exchange}\n//                  {ele.exchangeShortName} */}\n//                 </p>\n//                 {/* <a href={ele.url} target=\"_blank\" className=\"btn btn-primary\">\n//                   Read More\n//                 </a> */}\n//               </div>\n//             </div>\n//           </>\n//         );\n//     })}\n//     </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       setStocks(data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>Loading...</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"fetching data\")\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       console.log(data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [currentPage, setCurrentPage] = useState(1);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"Fetching data for page:\", currentPage);\n//     try {\n//       let response = await fetch(\n//         `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}`\n//       );\n//       let data = await response.json();\n//       console.log(\"Data received:\", data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, [currentPage]);\n\n//   const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//     setLoading(true); // Set loading to true when changing pages\n//   };\n\n//   return (\n//     <>\n//       <h2 className=\"stockdiv\">Get the latest Stock Price</h2>\n//       <div className=\"maindiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : memoizedStocks.length > 0 ? (\n//           memoizedStocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//                 <p className=\"card-text\">{ele.price}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n\n//         {/* Pagination Controls */}\n//         <div className=\"pagination\">\n//           <button\n//             disabled={currentPage === 1}\n//             onClick={() => handlePageChange(currentPage - 1)}\n//           >\n//             Previous\n//           </button>\n//           <span> Page {currentPage} </span>\n//           <button onClick={() => handlePageChange(currentPage + 1)}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { debounce } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchData = debounce(async (currentPage, setStocks, setLoading) => {\n  console.log(\"Fetching data for page:\", currentPage);\n  try {\n    let response = await fetch(`https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}`);\n    let data = await response.json();\n    console.log(\"Data received:\", data);\n    setStocks(data);\n    setLoading(false);\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    setLoading(false);\n  }\n}, 300); // Debounce time in milliseconds\n\nconst Stocks = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(() => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    fetchData(currentPage, setStocks, setLoading);\n  }, [currentPage]);\n  const memoizedStocks = useMemo(() => stocks, [stocks]);\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n    setLoading(true); // Set loading to true when changing pages\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"firstdiv\",\n      children: \"Get the latest Stock Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this) : memoizedStocks.length > 0 ? memoizedStocks.map((ele, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: ele.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: ele.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === 1,\n          onClick: () => handlePageChange(currentPage - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Page \", currentPage, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(currentPage + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"GsEz/IR++8ai1qhmGrphO/zgf9Q=\")), \"GsEz/IR++8ai1qhmGrphO/zgf9Q=\");\n_c2 = Stocks;\nexport default Stocks;\nvar _c, _c2;\n$RefreshReg$(_c, \"Stocks$React.memo\");\n$RefreshReg$(_c2, \"Stocks\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","debounce","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchData","currentPage","setStocks","setLoading","console","log","response","fetch","data","json","error","Stocks","_s","memo","_c","stocks","loading","setCurrentPage","memoizedStocks","handlePageChange","newPage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","ele","index","symbol","name","disabled","onClick","_c2","$RefreshReg$"],"sources":["/home/siddhi/InvestSavvy_coc_inheritance/invest-savvy/client/src/pages/getstock.js"],"sourcesContent":["// // https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\n\n\n// import React, { useEffect, useState } from \"react\";\n// // import invest from '../pictures/invest.jpeg';\n\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     let resonse = await fetch(\n//       \" https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//     );\n//     let data = await resonse.json();\n//     // console.log(data)\n//     setStocks(data);\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//     <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//           <div className=\"mainDiv\">\n//       {stocks.map((ele) => {\n//         // console.log(ele)\n//         return (\n//           <>\n//         <div className=\"card\" >\n//               {/* <img src={ele.urlToImage === null ? invest : ele.urlToImage} class=\"card-img-top\" alt=\"...\" /> */}\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 {/* <h5 className=\"card-title\">{ele.author === \"\" ? \"Janelle Ash\" : ele.author}</h5> */}\n//                 <p className=\"card-text\">\n//                  {ele.name}\n//                  {/* {ele.price}\n//                  {ele.exchange}\n//                  {ele.exchangeShortName} */}\n//                 </p>\n//                 {/* <a href={ele.url} target=\"_blank\" className=\"btn btn-primary\">\n//                   Read More\n//                 </a> */}\n//               </div>\n//             </div>\n//           </>\n//         );\n//     })}\n//     </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       setStocks(data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>Loading...</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"fetching data\")\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       console.log(data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [currentPage, setCurrentPage] = useState(1);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"Fetching data for page:\", currentPage);\n//     try {\n//       let response = await fetch(\n//         `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}`\n//       );\n//       let data = await response.json();\n//       console.log(\"Data received:\", data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, [currentPage]);\n\n//   const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//     setLoading(true); // Set loading to true when changing pages\n//   };\n\n//   return (\n//     <>\n//       <h2 className=\"stockdiv\">Get the latest Stock Price</h2>\n//       <div className=\"maindiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : memoizedStocks.length > 0 ? (\n//           memoizedStocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//                 <p className=\"card-text\">{ele.price}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n\n//         {/* Pagination Controls */}\n//         <div className=\"pagination\">\n//           <button\n//             disabled={currentPage === 1}\n//             onClick={() => handlePageChange(currentPage - 1)}\n//           >\n//             Previous\n//           </button>\n//           <span> Page {currentPage} </span>\n//           <button onClick={() => handlePageChange(currentPage + 1)}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { debounce } from 'lodash';\n\nconst fetchData = debounce(async (currentPage, setStocks, setLoading) => {\n  console.log(\"Fetching data for page:\", currentPage);\n  try {\n    let response = await fetch(\n      `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}`\n    );\n    let data = await response.json();\n    console.log(\"Data received:\", data);\n    setStocks(data);\n    setLoading(false);\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    setLoading(false);\n  }\n}, 300); // Debounce time in milliseconds\n\nconst Stocks = React.memo(() => {\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    fetchData(currentPage, setStocks, setLoading);\n  }, [currentPage]);\n\n  const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n    setLoading(true); // Set loading to true when changing pages\n  };\n\n  return (\n    <>\n      <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n      <div className=\"mainDiv\">\n        {loading ? (\n          <p>Loading...</p>\n        ) : memoizedStocks.length > 0 ? (\n          memoizedStocks.map((ele, index) => (\n            <div className=\"card\" key={index}>\n              <h3>{ele.symbol}</h3>\n              <div className=\"card-body\">\n                <p className=\"card-text\">{ele.name}</p>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No data available.</p>\n        )}\n\n        {/* Pagination Controls */}\n        <div className=\"pagination\">\n          <button\n            disabled={currentPage === 1}\n            onClick={() => handlePageChange(currentPage - 1)}\n          >\n            Previous\n          </button>\n          <span> Page {currentPage} </span>\n          <button onClick={() => handlePageChange(currentPage + 1)}>\n            Next\n          </button>\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport default Stocks;\n\n"],"mappings":";;AAAA;;AAGA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,QAAQ,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,SAAS,GAAGL,QAAQ,CAAC,OAAOM,W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"},"metadata":{},"sourceType":"module","externalDependencies":[]}