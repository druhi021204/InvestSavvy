{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\n\n// export const useSignup = () => {\n//     const[error, setError] = useState(null)\n//     const [isLoading, setIsLoading] = useState(null)\n//     const {dispatch} = useAuthContext()\n\n//     const signup = async(email, username, password) => {\n//         setIsLoading(true)\n//         setError(null)\n//         // console.log(email, username, password)\n//         const response = await fetch('/api/user/signup',{\n//             method: 'POST',\n//             headers: {'Content-Type': 'application/json'},\n//             body: JSON.stringify({email, username , password})\n//         })\n\n//         const json = await response.json()\n\n//         if(!response.ok)\n//         {\n//             setIsLoading(false)\n//             setError(json.error)\n//         }\n\n//         if(response.ok)\n//         {\n//             //save user to local storage\n//             localStorage.setItem('user', JSON.stringify(json))\n\n//             //update the auth context\n//             dispatch({type:'LOGIN', payload:json})\n\n//             setIsLoading(false)\n//         }\n//     }\n\n//     return {signup, isLoading, error}\n// }\n\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, username, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/user/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        const json = await response.json();\n        throw new Error(json.error || 'Sign up failed');\n      }\n      const json = await response.json();\n\n      // Save user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // Update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n    } catch (error) {\n      setError(error.message || 'Sign up failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"leglVsSbW4DJnC7nVdCyJFB0GD8=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","email","username","password","response","fetch","method","headers","body","JSON","stringify","ok","json","Error","localStorage","setItem","type","payload","message"],"sources":["/home/siddhi/InvestSavvy_coc_inheritance/invest-savvy/client/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\n\n// export const useSignup = () => {\n//     const[error, setError] = useState(null)\n//     const [isLoading, setIsLoading] = useState(null)\n//     const {dispatch} = useAuthContext()\n\n//     const signup = async(email, username, password) => {\n//         setIsLoading(true)\n//         setError(null)\n//         // console.log(email, username, password)\n//         const response = await fetch('/api/user/signup',{\n//             method: 'POST',\n//             headers: {'Content-Type': 'application/json'},\n//             body: JSON.stringify({email, username , password})\n//         })\n\n//         const json = await response.json()\n\n//         if(!response.ok)\n//         {\n//             setIsLoading(false)\n//             setError(json.error)\n//         }\n\n//         if(response.ok)\n//         {\n//             //save user to local storage\n//             localStorage.setItem('user', JSON.stringify(json))\n\n//             //update the auth context\n//             dispatch({type:'LOGIN', payload:json})\n\n//             setIsLoading(false)\n//         }\n//     }\n\n//     return {signup, isLoading, error}\n// }\n\nexport const useSignup = () => {\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const { dispatch } = useAuthContext();\n\n    const signup = async (email, username, password) => {\n        setIsLoading(true);\n        setError(null);\n\n        try {\n            const response = await fetch('/api/user/signup', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ email, username, password })\n            });\n\n            if (!response.ok) {\n                const json = await response.json();\n                throw new Error(json.error || 'Sign up failed');\n            }\n\n            const json = await response.json();\n\n            // Save user to local storage\n            localStorage.setItem('user', JSON.stringify(json));\n\n            // Update the auth context\n            dispatch({ type: 'LOGIN', payload: json });\n\n        } catch (error) {\n            setError(error.message || 'Sign up failed');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return { signup, isLoading, error };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;IAChDL,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;QAC7CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,KAAK;UAAEC,QAAQ;UAAEC;QAAS,CAAC;MACtD,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QACd,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC,MAAM,IAAIC,KAAK,CAACD,IAAI,CAACjB,KAAK,IAAI,gBAAgB,CAAC;MACnD;MAEA,MAAMiB,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;;MAElC;MACAE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,CAAC;;MAElD;MACAb,QAAQ,CAAC;QAAEiB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAK,CAAC,CAAC;IAE9C,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAACuB,OAAO,IAAI,gBAAgB,CAAC;IAC/C,CAAC,SAAS;MACNpB,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAAEE,MAAM;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACvC,CAAC;AAACD,EAAA,CArCWD,SAAS;EAAA,QAGGD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}