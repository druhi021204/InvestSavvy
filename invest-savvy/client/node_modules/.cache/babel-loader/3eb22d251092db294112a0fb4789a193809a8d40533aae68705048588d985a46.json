{"ast":null,"code":"var _jsxFileName = \"/home/siddhi/InvestSavvy_coc_inheritance/invest-savvy/client/src/pages/getstock.js\",\n  _s = $RefreshSig$();\n// // https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\n\n// import React, { useEffect, useState } from \"react\";\n// // import invest from '../pictures/invest.jpeg';\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     let resonse = await fetch(\n//       \" https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//     );\n//     let data = await resonse.json();\n//     // console.log(data)\n//     setStocks(data);\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//     <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//           <div className=\"mainDiv\">\n//       {stocks.map((ele) => {\n//         // console.log(ele)\n//         return (\n//           <>\n//         <div className=\"card\" >\n//               {/* <img src={ele.urlToImage === null ? invest : ele.urlToImage} class=\"card-img-top\" alt=\"...\" /> */}\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 {/* <h5 className=\"card-title\">{ele.author === \"\" ? \"Janelle Ash\" : ele.author}</h5> */}\n//                 <p className=\"card-text\">\n//                  {ele.name}\n//                  {/* {ele.price}\n//                  {ele.exchange}\n//                  {ele.exchangeShortName} */}\n//                 </p>\n//                 {/* <a href={ele.url} target=\"_blank\" className=\"btn btn-primary\">\n//                   Read More\n//                 </a> */}\n//               </div>\n//             </div>\n//           </>\n//         );\n//     })}\n//     </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       setStocks(data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>Loading...</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"fetching data\")\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       console.log(data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [currentPage, setCurrentPage] = useState(1);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"Fetching data for page:\", currentPage);\n//     try {\n//       let response = await fetch(\n//         `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}`\n//       );\n//       let data = await response.json();\n//       console.log(\"Data received:\", data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, [currentPage]);\n\n//   const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//     setLoading(true); // Set loading to true when changing pages\n//   };\n\n//   return (\n//     <>\n//       <h2 className=\"stockdiv\">Get the latest Stock Price</h2>\n//       <div className=\"maindiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : memoizedStocks.length > 0 ? (\n//           memoizedStocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//                 <p className=\"card-text\">{ele.price}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n\n//         {/* Pagination Controls */}\n//         <div className=\"pagination\">\n//           <button\n//             disabled={currentPage === 1}\n//             onClick={() => handlePageChange(currentPage - 1)}\n//           >\n//             Previous\n//           </button>\n//           <span> Page {currentPage} </span>\n//           <button onClick={() => handlePageChange(currentPage + 1)}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { debounce } from 'lodash';\n\n// const fetchData = debounce(async (currentPage, pageSize, setStocks, setLoading) => {\n//   try {\n//     const url = `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}&limit=${pageSize}`;\n//     console.log(\"Fetching data with URL:\", url);\n\n//     let response = await fetch(url);\n//     let data = await response.json();\n//     console.log(\"Data received:\", data);\n\n//     setStocks(data);\n//     setLoading(false);\n//   } catch (error) {\n//     console.error(\"Error fetching data:\", error);\n//     setLoading(false);\n//   }\n// }, 300); // Debounce time in milliseconds\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pageSize, setPageSize] = useState(1);\n\n//   useEffect(() => {\n//     fetchData(currentPage, pageSize, setStocks, setLoading);\n//   }, [currentPage, pageSize]);\n\n//   const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//     setLoading(true);\n//   };\n\n//   const handlePageSizeChange = (newPageSize) => {\n//     setPageSize(newPageSize);\n//     setCurrentPage(1);\n//     setLoading(true);\n//   };\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {/* Controls for changing page size */}\n//         <div className=\"pageSizeControls\">\n//           <label htmlFor=\"pageSize\">Items per page:</label>\n//           <select\n//             id=\"pageSize\"\n//             value={pageSize}\n//             onChange={(e) => handlePageSizeChange(Number(e.target.value))}\n//           >\n//             <option value={5}>5</option>\n//             <option value={10}>10</option>\n//             <option value={20}>20</option>\n//           </select>\n//         </div>\n\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : memoizedStocks && memoizedStocks.length > 0 ? (\n//           memoizedStocks.map((ele) => (\n//             <div className=\"card\" key={ele.symbol}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n\n//         {/* Pagination Controls */}\n//         <div className=\"pagination\">\n//           <button\n//             disabled={currentPage === 1}\n//             onClick={() => handlePageChange(currentPage - 1)}\n//           >\n//             Previous\n//           </button>\n//           <span> Page {currentPage} </span>\n//           <button onClick={() => handlePageChange(currentPage + 1)}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyDetails = () => {\n  _s();\n  const [symbol, setSymbol] = useState(\"\");\n  const [companyDetails, setCompanyDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchCompanyDetails = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`https://financialmodelingprep.com/api/v3/quote/${symbol}?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setCompanyDetails(data[0]);\n      } else {\n        setCompanyDetails(null);\n        setError(\"Company not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching company details:\", error);\n      setError(\"Error fetching data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchCompanyDetails();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Company Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Company Symbol:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: symbol,\n          onChange: e => setSymbol(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Get Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }, this), companyDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: companyDetails.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", companyDetails.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", companyDetails.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"changesPercentage:      \", companyDetails.changesPercentage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"change: \", companyDetails.change]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Percentage Change: \", companyDetails.changesPercentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Day Low: \", companyDetails.dayLow]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Day High: \", companyDetails.dayHigh]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Year Low: \", companyDetails.yearLow]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Year High: \", companyDetails.yearHigh]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Market Cap: \", companyDetails.marketCap]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price Avg 50: \", companyDetails.priceAvg50]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price Avg 200: \", companyDetails.priceAvg200]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Exchange: \", companyDetails.exchange]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Volume: \", companyDetails.volume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Volume: \", companyDetails.avgVolume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Open: \", companyDetails.open]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Previous Close: \", companyDetails.previousClose]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Earnings per Share (EPS): \", companyDetails.eps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price to Earnings (P/E) Ratio: \", companyDetails.pe]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Earnings Announcement: \", companyDetails.earningsAnnouncement]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Shares Outstanding: \", companyDetails.sharesOutstanding]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Timestamp: \", companyDetails.timestamp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyDetails, \"7HZhi5DSHvw86PHUsKXbnDYImFw=\");\n_c = CompanyDetails;\nexport default CompanyDetails;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetails\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CompanyDetails","_s","symbol","setSymbol","companyDetails","setCompanyDetails","loading","setLoading","error","setError","fetchCompanyDetails","response","fetch","data","json","length","console","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","disabled","style","color","name","price","changesPercentage","change","dayLow","dayHigh","yearLow","yearHigh","marketCap","priceAvg50","priceAvg200","exchange","volume","avgVolume","open","previousClose","eps","pe","earningsAnnouncement","sharesOutstanding","timestamp","_c","$RefreshReg$"],"sources":["/home/siddhi/InvestSavvy_coc_inheritance/invest-savvy/client/src/pages/getstock.js"],"sourcesContent":["// // https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\n\n\n// import React, { useEffect, useState } from \"react\";\n// // import invest from '../pictures/invest.jpeg';\n\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     let resonse = await fetch(\n//       \" https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//     );\n//     let data = await resonse.json();\n//     // console.log(data)\n//     setStocks(data);\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//     <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//           <div className=\"mainDiv\">\n//       {stocks.map((ele) => {\n//         // console.log(ele)\n//         return (\n//           <>\n//         <div className=\"card\" >\n//               {/* <img src={ele.urlToImage === null ? invest : ele.urlToImage} class=\"card-img-top\" alt=\"...\" /> */}\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 {/* <h5 className=\"card-title\">{ele.author === \"\" ? \"Janelle Ash\" : ele.author}</h5> */}\n//                 <p className=\"card-text\">\n//                  {ele.name}\n//                  {/* {ele.price}\n//                  {ele.exchange}\n//                  {ele.exchangeShortName} */}\n//                 </p>\n//                 {/* <a href={ele.url} target=\"_blank\" className=\"btn btn-primary\">\n//                   Read More\n//                 </a> */}\n//               </div>\n//             </div>\n//           </>\n//         );\n//     })}\n//     </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n\n// const Stocks = () => {\n//   const [stocks, setStocks] = useState([]);\n\n//   const fetchData = async () => {\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       setStocks(data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>Loading...</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Stocks;\n\n// import React, { useEffect, useState } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"fetching data\")\n//     try {\n//       let response = await fetch(\n//         \"https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja\"\n//       );\n//       let data = await response.json();\n//       console.log(data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : stocks.length > 0 ? (\n//           stocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { debounce } from 'lodash';\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [currentPage, setCurrentPage] = useState(1);\n\n//   const fetchData = debounce(async () => {\n//     console.log(\"Fetching data for page:\", currentPage);\n//     try {\n//       let response = await fetch(\n//         `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}`\n//       );\n//       let data = await response.json();\n//       console.log(\"Data received:\", data);\n//       setStocks(data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       setLoading(false);\n//     }\n//   }, 300); // Debounce time in milliseconds\n\n//   useEffect(() => {\n//     fetchData();\n//   }, [currentPage]);\n\n//   const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//     setLoading(true); // Set loading to true when changing pages\n//   };\n\n//   return (\n//     <>\n//       <h2 className=\"stockdiv\">Get the latest Stock Price</h2>\n//       <div className=\"maindiv\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : memoizedStocks.length > 0 ? (\n//           memoizedStocks.map((ele, index) => (\n//             <div className=\"card\" key={index}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//                 <p className=\"card-text\">{ele.price}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n\n//         {/* Pagination Controls */}\n//         <div className=\"pagination\">\n//           <button\n//             disabled={currentPage === 1}\n//             onClick={() => handlePageChange(currentPage - 1)}\n//           >\n//             Previous\n//           </button>\n//           <span> Page {currentPage} </span>\n//           <button onClick={() => handlePageChange(currentPage + 1)}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { debounce } from 'lodash';\n\n// const fetchData = debounce(async (currentPage, pageSize, setStocks, setLoading) => {\n//   try {\n//     const url = `https://financialmodelingprep.com/api/v3/stock/list?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja&page=${currentPage}&limit=${pageSize}`;\n//     console.log(\"Fetching data with URL:\", url);\n\n//     let response = await fetch(url);\n//     let data = await response.json();\n//     console.log(\"Data received:\", data);\n\n//     setStocks(data);\n//     setLoading(false);\n//   } catch (error) {\n//     console.error(\"Error fetching data:\", error);\n//     setLoading(false);\n//   }\n// }, 300); // Debounce time in milliseconds\n\n// const Stocks = React.memo(() => {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pageSize, setPageSize] = useState(1);\n\n//   useEffect(() => {\n//     fetchData(currentPage, pageSize, setStocks, setLoading);\n//   }, [currentPage, pageSize]);\n\n//   const memoizedStocks = useMemo(() => stocks, [stocks]);\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//     setLoading(true);\n//   };\n\n//   const handlePageSizeChange = (newPageSize) => {\n//     setPageSize(newPageSize);\n//     setCurrentPage(1);\n//     setLoading(true);\n//   };\n\n//   return (\n//     <>\n//       <h2 className=\"firstdiv\">Get the latest Stock Price</h2>\n//       <div className=\"mainDiv\">\n//         {/* Controls for changing page size */}\n//         <div className=\"pageSizeControls\">\n//           <label htmlFor=\"pageSize\">Items per page:</label>\n//           <select\n//             id=\"pageSize\"\n//             value={pageSize}\n//             onChange={(e) => handlePageSizeChange(Number(e.target.value))}\n//           >\n//             <option value={5}>5</option>\n//             <option value={10}>10</option>\n//             <option value={20}>20</option>\n//           </select>\n//         </div>\n\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : memoizedStocks && memoizedStocks.length > 0 ? (\n//           memoizedStocks.map((ele) => (\n//             <div className=\"card\" key={ele.symbol}>\n//               <h3>{ele.symbol}</h3>\n//               <div className=\"card-body\">\n//                 <p className=\"card-text\">{ele.name}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No data available.</p>\n//         )}\n\n//         {/* Pagination Controls */}\n//         <div className=\"pagination\">\n//           <button\n//             disabled={currentPage === 1}\n//             onClick={() => handlePageChange(currentPage - 1)}\n//           >\n//             Previous\n//           </button>\n//           <span> Page {currentPage} </span>\n//           <button onClick={() => handlePageChange(currentPage + 1)}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// });\n\n// export default Stocks;\n\n\nimport React, { useState } from \"react\";\n\nconst CompanyDetails = () => {\n  const [symbol, setSymbol] = useState(\"\");\n  const [companyDetails, setCompanyDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchCompanyDetails = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await fetch(\n        `https://financialmodelingprep.com/api/v3/quote/${symbol}?apikey=OfWkW6me85Ix6iPN2IpXXpZypva6P6ja`\n      );\n      const data = await response.json();\n\n      if (data && data.length > 0) {\n        setCompanyDetails(data[0]);\n      } else {\n        setCompanyDetails(null);\n        setError(\"Company not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching company details:\", error);\n      setError(\"Error fetching data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchCompanyDetails();\n  };\n\n  return (\n    <div>\n        <p></p>\n      <h2>Company Details</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Enter Company Symbol:\n          <input\n            type=\"text\"\n            value={symbol}\n            onChange={(e) => setSymbol(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\" disabled={loading}>\n          Get Details\n        </button>\n      </form>\n\n      {loading && <p>Loading...</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {companyDetails && (\n        <div>\n          <h3>{companyDetails.symbol}</h3>\n          <p>Name: {companyDetails.name}</p>\n          <p>Price: {companyDetails.price}</p>\n          {/* Add more details as needed */}\n          <p>changesPercentage:      {companyDetails.changesPercentage}</p>\n          <p>change: {companyDetails.change}</p>\n          <p>Percentage Change: {companyDetails.changesPercentage}%</p>\n          <p>Day Low: {companyDetails.dayLow}</p>\n          <p>Day High: {companyDetails.dayHigh}</p>\n          <p>Year Low: {companyDetails.yearLow}</p>\n          <p>Year High: {companyDetails.yearHigh}</p>\n          <p>Market Cap: {companyDetails.marketCap}</p>\n          <p>Price Avg 50: {companyDetails.priceAvg50}</p>\n          <p>Price Avg 200: {companyDetails.priceAvg200}</p>\n          <p>Exchange: {companyDetails.exchange}</p>\n          <p>Volume: {companyDetails.volume}</p>\n          <p>Average Volume: {companyDetails.avgVolume}</p>\n          <p>Open: {companyDetails.open}</p>\n          <p>Previous Close: {companyDetails.previousClose}</p>\n          <p>Earnings per Share (EPS): {companyDetails.eps}</p>\n          <p>Price to Earnings (P/E) Ratio: {companyDetails.pe}</p>\n          <p>Earnings Announcement: {companyDetails.earningsAnnouncement}</p>\n          <p>Shares Outstanding: {companyDetails.sharesOutstanding}</p>\n          <p>Timestamp: {companyDetails.timestamp}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CompanyDetails;\n"],"mappings":";;AAAA;;AAGA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;A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"},"metadata":{},"sourceType":"module","externalDependencies":[]}