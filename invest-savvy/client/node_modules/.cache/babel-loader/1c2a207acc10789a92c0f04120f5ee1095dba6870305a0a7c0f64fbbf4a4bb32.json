{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (username, password) => {\n    setIsLoading(true);\n    setError(null);\n    // console.log(email, username, password)\n    const response = await fetch('/api/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      //save user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      //update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"XLolJbgaWhcWCQyQceNUQz8r1xc=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","username","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["/home/siddhi/InvestSavvy_coc_inheritance/invest-savvy/client/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useLogin = () => {\n    const[error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    const {dispatch} = useAuthContext()\n\n    const login = async( username, password) => {\n        setIsLoading(true)\n        setError(null)\n        // console.log(email, username, password)\n        const response = await fetch('/api/user/login',{\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username , password})\n        })\n\n        const json = await response.json()\n\n        if(!response.ok)\n        {\n            setIsLoading(false)\n            setError(json.error)\n        }\n\n        if(response.ok)\n        {\n            //save user to local storage\n            localStorage.setItem('user', JSON.stringify(json))\n\n            //update the auth context\n            dispatch({type:'LOGIN', payload:json})\n\n            setIsLoading(false)\n        }\n    }\n\n    return {login, isLoading, error}\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAACQ;EAAQ,CAAC,GAAGP,cAAc,CAAC,CAAC;EAEnC,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACxCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IACd;IACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAC;MAC3CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,QAAQ;QAAGC;MAAQ,CAAC;IAC9C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EACf;MACIb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IAEA,IAAGQ,QAAQ,CAACQ,EAAE,EACd;MACI;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAC,OAAO;QAAEC,OAAO,EAACL;MAAI,CAAC,CAAC;MAEtCZ,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAACE,KAAK;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACpC,CAAC;AAAAD,EAAA,CApCYD,QAAQ;EAAA,QAGED,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}